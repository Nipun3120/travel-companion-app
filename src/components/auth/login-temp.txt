import { useState, useEffect } from "react";
import { useNavigate, Link } from "react-router-dom";
import axios from 'axios';
import FormControl from '@mui/material/FormControl';
import InputLabel from '@mui/material/InputLabel';
import OutlinedInput from '@mui/material/OutlinedInput';
import Button from '@mui/material/Button';
import FormHelperText from '@mui/material/FormHelperText';
import { useCurrentUserContext } from "../../contexts/currentUserContext";
import { useLoggedInStatus } from "../../contexts/userLoggedInStatus";

export const Login = () => {
    const { currentUser, setCurrentUser } = useCurrentUserContext();
    const {isLoggedIn, setLoggedIn} = useLoggedInStatus();
    const navigate = useNavigate();
    
    const [userName, setUserName] = useState('');
    const [password, setPassword] = useState('');
    const [helperText, setHelperText] = useState('');
    const token = localStorage.getItem("accessToken")

    useEffect(()=> {
        if(token) {
            axios({
                method:'get',
                url:'http://localhost:3030/accounts/token',
                headers:{
                    "Authorization": `Bearer ${token}`
                }
            }).then(res => {
                
            const credential  = res.data.id;
            setCurrentUser(credential.userName)
            navigate('/chat')
            setHelperText('')

        })}
    }, [isLoggedIn])
    
    console.log("from login user: "+ currentUser)

    const handleNameChange = (e) => {
        setUserName(e.target.value);
    }
    const handlePasswordChange = (e) => {
        setPassword(e.target.value);
    }
    
    const checkCredentials = async() => {
        // localStorage.removeItem("accessToken")
        const newCredentials = { userName, password }

        if(userName !== '' && password !== '') {
            try{
                axios({
                    method: 'post',
                    url: 'http://localhost:3030/accounts/login',
                    data: newCredentials
                }).then(res => {
                    localStorage.setItem("accessToken", res.data.accessToken)
                    setLoggedIn(true)
                })
            } catch(error) {
                console.log(error)
            }

        } 
        else {
            setHelperText("missing credentials");
        }
    }
    return(
        <div>
            <h1>Login first to enter Chat Screen</h1>
            <FormControl style={{ margin: 4 }}>
                <InputLabel htmlFor="component-outlined">Username</InputLabel>
                <OutlinedInput
                    onChange={handleNameChange}
                    label="Name"
                    required
                />
            </FormControl>
            <br></br>
            <FormControl style={{ margin: 4 }}>
                <InputLabel htmlFor="component-outlined">Password</InputLabel>
                <OutlinedInput
                    onChange={handlePasswordChange}
                    label="Password"
                    type="password"
                    required
                />
                <FormHelperText style={{ color: "" }} id="component-helper-text">
                    {helperText}
                </FormHelperText>
            </FormControl>
            <br></br>
            <Button style={{ margin: 4 }} onClick={checkCredentials} variant="outlined">Submit</Button>
            <p>Don't have an account? <Link to="/signup">Create Account</Link></p>
        </div>
    )
}